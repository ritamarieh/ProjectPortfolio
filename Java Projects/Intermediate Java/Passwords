/**
 *  Program for taking into account how many times a student changes their password.
 *  @author  Rita Herfi
  */
//package mypkg;

//import java.util.Arrays; // Can be used for sorting. See Java API

public class PasswordProg1 {
	// 2D class instance variable declaration here--just the data type and name
	 final int NUMBER_OF_STUDENTS = 3; //number of students
	 final int NUMBER_OF_MONTHS = 4; //number of months for passwords
	String[][] studentPassword = new String[3][4]; //global array
   /** 
    * Constructor
    */
	public PasswordProg1(String[] passwords) {
		// Here's where you allocate storage for 2D array
		// your2DarrayName = new String[dimension1ForNumberStudents][dimesion2ForNumberPasswords];
		//for iteration 
		int i;
		int j; 
		int k = 0;; 
		 
		 
		 for (i = 0; i < NUMBER_OF_STUDENTS; ++i) {
			 for(j = 0; j < NUMBER_OF_MONTHS; ++j) {
				 studentPassword[i][j] = passwords[k];
				 k++;
			 }
		 }
		
		
		// Nested loops to fill array with COPIES of strings in passwords array.
		// In other words, use your2DarrayName = new String[ theStringInpasswordArray ];
		
		
		
	}
	// public non-static methods here...
		public boolean hasWord(String password) {
			//for loop through string and check if any of the passwords match
			for (int i = 0; i < NUMBER_OF_STUDENTS; ++i) {
				for(int j = 0; j < NUMBER_OF_MONTHS; ++j) {
					if(studentPassword[i][j] == password) { //if the password matches what is given return true
						return true;
					}
				}
			}
			return false; //if it doesn't meet the condition return false
		}
		
		
		public void unlockAll() {
			// using nested for loop make them all "unlock"
			for (int i = 0; i < NUMBER_OF_STUDENTS; ++i) {
				for (int j = 0; j < NUMBER_OF_MONTHS; ++j) {
					studentPassword[i][j] = "unlock";		
					System.out.print(studentPassword[i][j] + " "); //to print when called
				}
			}
			System.out.println(); //for organization purposes
		}
		
		public String longest() {
			//check how long specific passwords are then
			// print out the longest
			String longestWord = " ";
			int maxLength = studentPassword[0][0].length();
			for (int i = 0; i < NUMBER_OF_STUDENTS; ++i) {
				for (int j = 0; j < NUMBER_OF_MONTHS; ++j) {
					if(studentPassword[i][j].length() > maxLength) {
						maxLength = studentPassword[i][j].length();
					}
				}
			}
			
			//Go through and check first instance of longest password length
			for (int i = 0; i < NUMBER_OF_STUDENTS; ++i) {
				for (int j = 0; j < NUMBER_OF_MONTHS; ++j) {
					if(studentPassword[i][j].length() == maxLength) {
						longestWord = studentPassword[i][j];
						break;
					}
				}
				if(longestWord.length() == maxLength) { //to break out of both loops after first instance
					break;
				}
			}
			
			return longestWord;
			
		}
		
		public int mostFrequent() {
			int most = 0; //holds student with most changes
			int max = 0; //holds highest amount of changes
			for (int i = 0; i < NUMBER_OF_STUDENTS; ++i) {
				int count = 0;  //counts number of times password is changed
				for (int j = 0; j < (NUMBER_OF_MONTHS - 1); ++j) {
					if (studentPassword[i][j] == studentPassword[i][j + 1]) {
						count++;
					}
						if (count > max) {
							max = count;
							
						}
				}
				if(max == count) {
					most = i + 1;
					break;
				}

			}
			
			return most;
		}

		public String getId() {
			return "Program 1, Rita Herfi";
		} 
		
	

   
   
   // main method here (your tester)
	public static void main(String[] args) {
			// TODO Auto-generated method stub
			String[] studentPass = {"a ", "a ", "a ", "b ", "Hello", "Hello", "Hello", "Hello", "where", "why", "how", "please"};
			PasswordProg1 pass = new PasswordProg1(studentPass);
			
			System.out.println(pass.longest());
			System.out.println(pass.hasWord("Hello"));
			System.out.println(pass.hasWord("no"));
			System.out.println(pass.mostFrequent());
			pass.unlockAll();
			System.out.println(pass.getId());
		}
}




